-- Script de configuration des tables d'√©v√©nements
-- Ex√©cutez ce script dans votre base de donn√©es Supabase

-- 1. Cr√©er la table event_categories si elle n'existe pas
CREATE TABLE IF NOT EXISTS event_categories (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    color VARCHAR(7) DEFAULT '#3B82F6',
    icon VARCHAR(50) DEFAULT 'üìÖ',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. Cr√©er la table daily_events si elle n'existe pas
CREATE TABLE IF NOT EXISTS daily_events (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    event_type VARCHAR(20) NOT NULL,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    date DATE NOT NULL,
    year INTEGER,
    country_code VARCHAR(3),
    category_id UUID REFERENCES event_categories(id),
    person_name VARCHAR(100),
    profession VARCHAR(100),
    image_url VARCHAR(500),
    tags TEXT[],
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    -- Colonnes Wikip√©dia
    wikipedia_title VARCHAR(500),
    wikipedia_url TEXT,
    wikipedia_extract TEXT,
    wikipedia_page_id VARCHAR(50),
    is_from_wikipedia BOOLEAN DEFAULT FALSE,
    last_wikipedia_update TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. Cr√©er un index pour am√©liorer les performances
CREATE INDEX IF NOT EXISTS idx_daily_events_date ON daily_events(date);
CREATE INDEX IF NOT EXISTS idx_daily_events_type ON daily_events(event_type);
CREATE INDEX IF NOT EXISTS idx_daily_events_active ON daily_events(is_active);

-- 4. Ins√©rer les cat√©gories d'√©v√©nements par d√©faut
INSERT INTO event_categories (name, color, icon) VALUES
    ('Personnalit√©s', '#3B82F6', 'üë§'),
    ('√âv√©nements historiques', '#EF4444', 'üìú'),
    ('F√©ri√©s', '#10B981', 'üéâ'),
    ('Journ√©es internationales', '#8B5CF6', 'üåç'),
    ('Musiciens', '#F59E0B', 'üéµ'),
    ('Acteurs', '#EC4899', 'üé¨'),
    ('√âcrivains', '#06B6D4', 'üìö'),
    ('Scientifiques', '#84CC16', 'üî¨'),
    ('Sportifs', '#F97316', '‚öΩ'),
    ('Politiciens', '#6366F1', 'üèõÔ∏è'),
    ('Artistes', '#A855F7', 'üé®')
ON CONFLICT (name) DO NOTHING;

-- 5. Ins√©rer quelques √©v√©nements d'exemple
INSERT INTO daily_events (event_type, title, description, date, year, person_name, profession, category_id, is_active) VALUES
    ('birthday', 'Anniversaire de Mick Jagger', 'Chanteur et musicien britannique, membre des Rolling Stones', CURRENT_DATE, 1943, 'Mick Jagger', 'Musicien', (SELECT id FROM event_categories WHERE name = 'Musiciens'), true),
    ('birthday', 'Anniversaire de Kate Beckinsale', 'Actrice britannique c√©l√®bre pour ses r√¥les dans Underworld', CURRENT_DATE, 1973, 'Kate Beckinsale', 'Actrice', (SELECT id FROM event_categories WHERE name = 'Acteurs'), true),
    ('death', 'D√©c√®s de Jimi Hendrix', 'Guitariste et chanteur am√©ricain, l√©gende du rock', CURRENT_DATE, 1970, 'Jimi Hendrix', 'Guitariste', (SELECT id FROM event_categories WHERE name = 'Musiciens'), true),
    ('international_day', 'Journ√©e internationale de la paix', 'Journ√©e d√©di√©e √† la promotion de la paix dans le monde', CURRENT_DATE, NULL, NULL, NULL, (SELECT id FROM event_categories WHERE name = 'Journ√©es internationales'), true)
ON CONFLICT (title, date) DO NOTHING;

-- 6. Cr√©er une fonction pour mettre √† jour les √©v√©nements avec des donn√©es Wikip√©dia
CREATE OR REPLACE FUNCTION update_event_with_wikipedia(
    p_event_id UUID,
    p_wikipedia_title VARCHAR(500),
    p_wikipedia_url TEXT,
    p_wikipedia_extract TEXT,
    p_wikipedia_page_id VARCHAR(50)
) RETURNS VOID AS $$
BEGIN
    UPDATE daily_events 
    SET 
        wikipedia_title = p_wikipedia_title,
        wikipedia_url = p_wikipedia_url,
        wikipedia_extract = p_wikipedia_extract,
        wikipedia_page_id = p_wikipedia_page_id,
        is_from_wikipedia = TRUE,
        last_wikipedia_update = NOW()
    WHERE id = p_event_id;
END;
$$ LANGUAGE plpgsql;

-- 7. Cr√©er une vue pour les √©v√©nements avec donn√©es Wikip√©dia
CREATE OR REPLACE VIEW popular_wikipedia_events AS
SELECT 
    de.*,
    ec.name as category_name,
    ec.color as category_color,
    ec.icon as category_icon
FROM daily_events de
LEFT JOIN event_categories ec ON de.category_id = ec.id
WHERE de.is_from_wikipedia = TRUE
ORDER BY de.date DESC, de.title;

-- 8. Cr√©er une fonction pour synchroniser les √©v√©nements avec Wikip√©dia
CREATE OR REPLACE FUNCTION sync_events_with_wikipedia() RETURNS INTEGER AS $$
DECLARE
    event_count INTEGER := 0;
BEGIN
    -- Cette fonction sera appel√©e par le script Node.js
    -- Pour l'instant, elle retourne juste le nombre d'√©v√©nements actifs
    SELECT COUNT(*) INTO event_count FROM daily_events WHERE is_active = TRUE;
    RETURN event_count;
END;
$$ LANGUAGE plpgsql;

-- 9. Cr√©er des politiques RLS (Row Level Security) si n√©cessaire
ALTER TABLE daily_events ENABLE ROW LEVEL SECURITY;
ALTER TABLE event_categories ENABLE ROW LEVEL SECURITY;

-- Politique pour permettre la lecture publique des √©v√©nements actifs
CREATE POLICY "Allow public read access to active events" ON daily_events
    FOR SELECT USING (is_active = TRUE);

-- Politique pour permettre la lecture publique des cat√©gories
CREATE POLICY "Allow public read access to event categories" ON event_categories
    FOR SELECT USING (TRUE);

-- 10. Cr√©er un trigger pour mettre √† jour updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_daily_events_updated_at BEFORE UPDATE ON daily_events
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_event_categories_updated_at BEFORE UPDATE ON event_categories
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Message de confirmation
DO $$
BEGIN
    RAISE NOTICE 'Configuration des tables d''√©v√©nements termin√©e avec succ√®s!';
    RAISE NOTICE 'Tables cr√©√©es: event_categories, daily_events';
    RAISE NOTICE 'Index cr√©√©s pour optimiser les performances';
    RAISE NOTICE 'Cat√©gories par d√©faut ins√©r√©es';
    RAISE NOTICE '√âv√©nements d''exemple ins√©r√©s';
    RAISE NOTICE 'Fonctions et vues cr√©√©es pour l''int√©gration Wikip√©dia';
END $$; 